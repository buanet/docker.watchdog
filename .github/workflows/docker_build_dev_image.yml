# Github action to build Docker image from dev branch (tag: testing)

name: Build Docker image from dev branch

on:
  push:
    branches:
      - dev
      
jobs:
  bulid_dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (dev)
        uses: actions/checkout@v2.3.4
        with:
          repository: 'buanet/docker.watchdog'
          ref: 'dev'
        
      - name: Get versions
        id: version
        run: |
          VERSION="$(cat .VERSION)"
          MAJORVERSION="$(cat .VERSION | cut -c 1-2 | sed -r 's#^(.{0})#\1latest-#')"
          DATI=`date '+%y%m%d-%H%M%S'`
          echo "This is the Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "This is the Major Version: $MAJORVERSION"
          echo "majorversion=$MAJORVERSION" >> $GITHUB_ENV
          echo "This is the Buildnumber/Timestamp: $DATI"
          echo "dati=$DATI" >> $GITHUB_ENV

      - name: Set up manifest tool
        run: |
          wget https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64 -O manifest-tool
          chmod +x manifest-tool

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGES_USER }}
          password: ${{ secrets.PACKAGES_PASS }}

      - name: Build Docker image (amd64)
        uses: docker/build-push-action@v2.6.1
        with:
          context: ./amd64
          file: ./amd64/Dockerfile
          push: true
          load: false
          platforms: linux/amd64
          tags: |
            buanet/watchdog:dev-amd64,
            ghcr.io/buanet/watchdog:dev-amd64
          
      - name: Build Docker image (armv32v7)
        uses: docker/build-push-action@v2.6.1
        with:
          context: ./arm32v7
          file: ./arm32v7/Dockerfile
          push: true
          load: false
          platforms: linux/arm/v7
          tags: |
            buanet/watchdog:dev-arm32v7,
            ghcr.io/buanet/watchdog:dev-arm32v7
      
      - name: Build Docker image (arm64v8)
        uses: docker/build-push-action@v2.6.1
        with:
          context: ./arm64v8
          file: ./arm64v8/Dockerfile
          push: true
          load: false
          platforms: linux/arm64
          tags: |
            buanet/watchdog:dev-arm64v8,
            ghcr.io/buanet/watchdog:dev-arm64v8
          
      - name: Create and push manifests
        run: |
          cat ./manifest.yml | sed "s/\$VERSION/dev/g" > manifest_temp.yaml
          cat ./manifest_temp.yaml | sed "s/\$DOCKERTAG/dev/g" > manifest_dev.yaml
          ./manifest-tool --username ${{ secrets.DOCKER_USER }} --password ${{ secrets.DOCKER_PASS }} push from-spec manifest_dev.yaml
          cat ./ghcr_manifest.yml | sed "s/\$VERSION/dev/g" > ghcr_manifest_temp.yaml
          cat ./ghcr_manifest_temp.yaml | sed "s/\$DOCKERTAG/dev/g" > ghcr_manifest_dev.yaml
          ./manifest-tool --username ${{ secrets.PACKAGES_USER }} --password ${{ secrets.PACKAGES_PASS }} push from-spec ghcr_manifest_dev.yaml
          
      - name: Delete untagged images from GitHub packages
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.PACKAGES_PASS }}
          script: |
            const response = await github.request("GET /users/${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions",
              { per_page: ${{ env.PER_PAGE }}
            });
            for(version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log("delete " + version.id)
                    const deleteResponse = await github.request("DELETE /user/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
                    console.log("status " + deleteResponse.status)
                }
            }
        env:
          OWNER: buanet
          PACKAGE_NAME: watchdog
          PER_PAGE: 100
